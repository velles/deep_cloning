= Deep Duplicating Gem

This gem gives every ActiveRecord::Base object the possibility to do a deep clone -- saving the cloned object(s) as it recurses.


Put this in your Gemfile to install:
    gem "deep_cloning", :git => "git://github.com/velles/deep_cloning.git"



== Example

=== Arguments / Defaults
    ar_object.deep_dup(
        :include => [],
        :except => [:created_at, :updated_at, :id],
        :force => [], # not yet implemented
        :remap => [] # not yet implemented
    )

=== Duplicating a model without an attribute
   pirate.deep_dup(:except => :name)
 
=== Duplicating a model without multiple attributes
   pirate.deep_dup(:except => [:name, :nick_name])

=== Duplicating one single association
   pirate.deep_dup(:include => :mateys)

=== Duplicating multiple associations
   pirate.deep_dup(:include => [:mateys, :treasures])

=== Duplicating really deep
   pirate.clone!(:include => {:treasures => :gold_pieces})

=== Duplicating really deep with multiple associations
   pirate.deep_dup(:include => [:mateys, {:treasures => :gold_pieces}])

== To-Do

=== The forcing of certain attributes
    pirate.deep_dup(:force => [
        {:pirate => {:name => "SeÃ±or Jack"},
         :parrot => {:type => "eagle"}
        }
    ])

=== Re-Mapping of attributes and objects
Handy for mutating objects that may have the same parent class.. or are just really similar

    pirate.deep_dup(:remap => [
        {:pirate => [:red_coat, {:pirate_attr => :red_cout_attr}]
         :parrot => [:ostrich. {:parrot_attr => :ostrich_attr}]
        }
    ])

Originally Copyright (c) 2008 Jan De Poorter, released under the MIT license  

--> https://github.com/openminds/deep_cloning
